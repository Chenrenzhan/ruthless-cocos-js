// Generated by CoffeeScript 1.10.0
(function() {
  this.LoadingLayer = BaseLayer.extend({
    stMainBg: null,
    stTitle: null,
    stGarlic: null,
    stTipFrame: null,
    lbTip: null,
    pbLoading: null,
    stSlider: null,
    stBarBg: null,
    stBarFront: null,
    ctor: function() {
      this._super();
      this.initMainBg();
      this.initTitle();
      this.initProgress();
      this.initGarlic();
      this.initTip();
      return true;
    },
    initMainBg: function() {
      this.stMainBg = new cc.Sprite(res.igMainBg);
      this.stMainBg.attr({
        x: cc.winSize.width / 2,
        y: cc.winSize.height / 2
      });
      return this.addChild(this.stMainBg, 0);
    },
    initTitle: function() {
      this.stTitle = new cc.Sprite(res.igTitle);
      this.stTitle.attr({
        x: cc.winSize.width / 2,
        y: cc.winSize.height - 130
      });
      return this.addChild(this.stTitle, 0);
    },
    initProgress: function() {
      var rect;
      this.pbLoading = ccui.Slider.create();
      this.pbLoading.loadBarTexture(res.igBarBg, ccui.Widget.LOCAL_TEXTURE);
      this.pbLoading.loadProgressBarTexture(res.igBarFront, ccui.Widget.LOCAL_TEXTURE);
      this.pbLoading.loadSlidBallTextureNormal(res.igBarSlider, ccui.Widget.LOCAL_TEXTURE);
      rect = this.pbLoading.getCapInsetsBarRenderer();
      this.pbLoading.setPercent(2);
      this.pbLoading.setScale9Enabled(false);
      this.pbLoading.enabled = false;
      this.pbLoading.attr({
        x: cc.winSize.width / 2 - 50,
        y: 180
      });
      return this.stMainBg.addChild(this.pbLoading, 0);
    },
    initGarlic: function() {
      this.stGarlic = new cc.Sprite(res.igGarlic);
      this.stGarlic.attr({
        x: cc.winSize.width - this.stGarlic.width / 2 - 170,
        y: this.stGarlic.height / 2 + 150
      });
      return this.addChild(this.stGarlic, 0);
    },
    initTip: function() {
      this.stTip = new cc.Sprite(res.igTipFrame);
      this.stTip.attr({
        x: cc.winSize.width - this.stTip.width / 2 - 280,
        y: this.stTip.height / 2 + 280
      });
      this.lbTip = new cc.LabelTTF("算个毛", "Arial", 50);
      this.lbTip.fillStyle = new cc.Color(72, 52, 28, 255);
      this.stTip.addChild(this.lbTip, 0);
      this.lbTip.attr({
        x: this.stTip.width / 2 + 120,
        y: this.stTip.height / 2 + 100
      });
      return this.addChild(this.stTip, 0);
    },

    /*
    设置进度条的值[0,100]
     */
    setProgress: function(progress) {
      if (progress < 2) {
        return this.pbLoading.setPercent(2);
      } else if (progress > 97) {
        return this.pbLoading.setPercent(97);
      } else {
        return this.pbLoading.setPercent(progress);
      }
    },

    /*
    获取进度条的值
     */
    getProgress: function() {
      var progress;
      progress = this.pbLoading.getPercent();
      if (progress < 2) {
        return 0;
      } else if (progress > 97) {
        return 100;
      }
      return this.pbLoading.getPercent();
    }
  });

}).call(this);

//# sourceMappingURL=LoadingScene.js.map
