// Generated by CoffeeScript 1.10.0

/*
  主游戏页面
 */

(function() {
  this.MainGameLayer = cc.Layer.extend({
    stMainBg: null,
    stTitle: null,
    btnClassics: null,
    btnChallenge: null,
    btnArcade: null,
    btnMenu: null,
    ctor: function() {
      this._super();
      if (THIS.musicState) {
        cc.audioEngine.playMusic(res.bgm, true);
      }
      this.initMainBg();
      this.initTitle();
      this.initBtnClassics();
      this.initBtnChallenge();
      this.initBtnArcade();
      this.initBtnMenu();
      return true;
    },
    initMainBg: function() {
      this.stMainBg = new cc.Sprite(res.igMainBg);
      this.stMainBg.attr({
        x: cc.winSize.width / 2,
        y: cc.winSize.height / 2
      });
      return this.addChild(this.stMainBg, 0);
    },
    initTitle: function() {
      this.stTitle = new cc.Sprite(res.igTitle);
      this.stTitle.attr({
        x: cc.winSize.width / 2,
        y: cc.winSize.height - 130
      });
      return this.addChild(this.stTitle, 0);
    },
    btnListener: cc.EventListener.create({
      event: cc.EventListener.TOUCH_ONE_BY_ONE,
      swallowTouches: true,
      onTouchBegan: function(touch, event) {
        var locationInNode, rect, s, target;
        LogTool.c("onTouchBegan");
        target = event.getCurrentTarget();
        locationInNode = target.convertToNodeSpace(touch.getLocation());
        s = target.getContentSize();
        rect = cc.rect(target.x, target.y, s.width, s.height);
        if (cc.rectContainsPoint(rect, locationInNode)) {
          target.opacity = 180;
          return true;
        }
        return false;
      },
      onTouchMoved: function(touch, event) {
        var delta, target;
        LogTool.c("onTouchMoved");
        target = event.getCurrentTarget();
        delta = touch.getDelta();
        target.x += delta.x;
        return target.y += delta.y;
      },
      onTouchEnded: function(touch, event) {
        var target;
        LogTool.c("onTouchEnded");
        return target = event.getCurrentTarget();
      }
    }),
    initBtnClassics: function() {
      var self;
      this.btnClassics = new ccui.Button();
      this.btnClassics.loadTextureNormal(res.igBtnClassics, ccui.Widget.LOCAL_TEXTURE);
      this.btnClassics.setPressedActionEnabled(true);
      this.btnClassics.attr({
        x: 230,
        y: 330
      });
      self = this;
      this.btnClassics.setTouchEnabled(true);
      this.addChild(this.btnClassics, 5);
      return this.btnClassics.addTouchEventListener(function(touch, event) {
        var curScene;
        if (event === ccui.Widget.TOUCH_ENDED) {
          LogTool.c("点击经典模式按钮");
          curScene = cc.director.getRunningScene();
          cc.director.pushScene(curScene);
          return cc.director.runScene(new PlayGameScene(THIS.gameMode.classics));
        }
      }, this.btnClassics);
    },
    initBtnChallenge: function() {
      this.btnChallenge = new ccui.Button();
      this.btnChallenge.loadTextureNormal(res.igBtnChallenge, ccui.Widget.LOCAL_TEXTURE);
      this.btnChallenge.setPressedActionEnabled(true);
      this.btnChallenge.attr({
        x: cc.winSize.width / 2,
        y: 180
      });
      this.btnChallenge.setTouchEnabled(true);
      this.addChild(this.btnChallenge, 5);
      return this.btnChallenge.addTouchEventListener(function(touch, event) {
        var curScene;
        if (event === ccui.Widget.TOUCH_ENDED) {
          LogTool.c("点击挑战模式按钮");
          curScene = cc.director.getRunningScene();
          cc.director.pushScene(curScene);
          return cc.director.runScene(new PlayGameScene(THIS.gameMode.challenge));
        }
      }, this.btnChallenge);
    },
    initBtnArcade: function() {
      this.btnArcade = new ccui.Button();
      this.btnArcade.loadTextureNormal(res.igBtnArcade, ccui.Widget.LOCAL_TEXTURE);
      this.btnArcade.setPressedActionEnabled(true);
      this.btnArcade.attr({
        x: cc.winSize.width - 230,
        y: 330
      });
      this.btnArcade.setTouchEnabled(true);
      this.addChild(this.btnArcade, 5);
      return this.btnArcade.addTouchEventListener(function(touch, event) {
        var curScene;
        if (event === ccui.Widget.TOUCH_ENDED) {
          LogTool.c("点击街机模式按钮");
          curScene = cc.director.getRunningScene();
          cc.director.pushScene(curScene);
          return cc.director.runScene(new PlayGameScene(THIS.gameMode.arcade));
        }
      }, this.btnArcade);
    },
    initBtnMenu: function() {
      var self;
      self = this;
      this.btnMenu = new ccui.Button();
      this.btnMenu.loadTextureNormal(res.igBtnMenu, ccui.Widget.LOCAL_TEXTURE);
      this.btnMenu.setPressedActionEnabled(true);
      this.btnMenu.attr({
        x: 80,
        y: 50
      });
      this.btnMenu.setTouchEnabled(true);
      this.addChild(this.btnMenu, 5);
      return this.btnMenu.addTouchEventListener(function(touch, event) {
        var menuDialog;
        if (event === ccui.Widget.TOUCH_ENDED) {
          LogTool.c("点击菜单模式按钮");
          menuDialog = new MenuDialog();
          return self.addChild(menuDialog, 10);
        }
      }, this.btnMenu);
    }
  });

  this.MainGameScene = cc.Scene.extend({
    onEnter: function() {
      var layer;
      this._super();
      layer = new MainGameLayer();
      return this.addChild(layer);
    }
  });

}).call(this);

//# sourceMappingURL=MainGameScene.js.map
